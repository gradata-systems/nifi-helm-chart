{{- $serviceName := (printf "%s-http" (include "nifi.fullname" . )) }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "nifi.fullname" . }}
  labels:
    {{- include "nifi.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  tls:
    - hosts:
        - {{ .Values.ingress.hostName }}
      secretName: {{ include "nifi.fullname" . }}-tls
  rules:
    - host: {{ .Values.ingress.hostName }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  name: https
          {{- range $name, $port := .Values.extraPorts }}
          {{- if $port.ingress }}
          - path: {{ $port.ingress.path | quote }}
            pathType: {{ $port.ingress.pathType | default "Exact" }}
            backend:
              service:
                {{- if $port.nodePort }}
                name: {{ include "nifi.fullname" $ }}-nodeport
                {{- else }}
                name: {{ $serviceName }}
                {{- end }}
                port:
                  name: {{ $name }}
          {{- end }}
          {{- end }}
{{- if .Values.metrics.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "nifi.fullname" . }}-metrics
  labels:
    {{- include "nifi.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/rewrite-target: /nifi-api/flow/metrics/prometheus
    {{- if .Values.metrics.ingress.requireClientCertificate }}
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ .Release.Namespace }}/{{ include "nifi.fullname" . }}-tls
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    {{- else }}
    nginx.ingress.kubernetes.io/proxy-ssl-secret: {{ .Release.Namespace }}/{{ include "nifi.fullname" . }}-tls
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  tls:
    - hosts:
      - {{ include "nifi.metricsHostName" . }}
      secretName: {{ include "nifi.fullname" . }}-tls
  rules:
    - host: {{ include "nifi.metricsHostName" . }}
      http:
        paths:
        {{- range $i, $e := until (int .Values.global.nifi.nodeCount) }}
          - path: /{{ include "nifi.fullname" $ }}-{{ $i }}
            pathType: Exact
            backend:
              service:
                name: {{ include "nifi.fullname" $ }}-{{ $i }}
                port:
                  name: https
        {{- end }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "nifi.fullname" . }}-s2s
  labels:
    {{- include "nifi.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ .Release.Namespace}}/{{ include "nifi.fullname" . }}-tls
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-secret: {{ .Release.Namespace}}/{{ include "nifi.fullname" . }}-tls
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "on"
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/proxy-ssl-name: {{ $serviceName }}.{{ .Release.Namespace }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-ProxyScheme https;
      proxy_set_header X-ProxyHost $server_name;
      proxy_set_header X-ProxyPort 443;
      proxy_set_header X-ProxiedEntitiesChain "<$ssl_client_s_dn>";
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  tls:
    - hosts:
        - {{ include "nifi.siteToSiteHostName" . }}
        {{- include "nifi.ingressNodeList" . | nindent 8 }}
      secretName: {{ include "nifi.fullname" . }}-tls
  rules:
    - host: {{ include "nifi.siteToSiteHostName" . }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  name: https
    {{- range $i, $e := until (int .Values.global.nifi.nodeCount) }}
    - host: {{ printf "%s-%d.%s" (include "nifi.fullname" $) $i (include "nifi.siteToSiteHostName" $) }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "nifi.fullname" $ }}-{{ $i }}
                port:
                  name: https
    {{- end }}
