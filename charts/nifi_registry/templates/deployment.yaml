{{- $nifiRegistryHome := "/opt/nifi-registry/nifi-registry-current" }}
{{- $flowStorageDir := printf "%s/data/flow_storage" $nifiRegistryHome }}
{{- $bundleStorageDir := printf "%s/data/extension_bundles" $nifiRegistryHome }}
{{- $databaseDriverPath := "/opt/nifi-registry/libs" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nifi-registry.fullname" . }}
  labels:
    {{- include "nifi-registry.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
  selector:
    matchLabels:
      {{- include "nifi-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nifi-registry.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        {{- if .Values.database.external }}
        - name: copy-mysql-driver
          image: {{ .Values.global.busybox.repository }}
          command:
            - sh
            - -c
            - |
              cp /source/{{ .Values.database.driver.fileName }} /dest/
          volumeMounts:
            - mountPath: /source/{{ .Values.database.driver.fileName }}
              name: dbdriver-source
              subPath: {{ .Values.database.driver.fileName }}
              readOnly: true
            - mountPath: /dest
              name: dbdriver
        {{- end }}
        {{- if .Values.persistence.takeOwnershipOnStartup }}
        - name: take-ownership
          image: {{ .Values.global.busybox.repository }}
          command:
            - sh
            - -c
            - |
              chown {{ .Values.securityContext.runAsUser}}:{{ .Values.securityContext.runAsGroup }} data/*
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          volumeMounts:
            {{- if .Values.database.external }}
            - mountPath: /data/database
              name: data
              subPath: {{ .Values.persistence.database.path }}
            {{- end }}
            - mountPath: /persistent_conf
              name: data
              subPath: {{ .Values.persistence.config.path }}
            {{- if eq .Values.persistence.flow.provider "file" }}
            - mountPath: /data/flow
              name: data
              subPath: {{ .Values.persistence.flow.fileProvider.path }}
            {{- end }}
            {{- if eq .Values.persistence.bundle.provider "file" }}
            - mountPath: /data/bundle
              name: data
              subPath: {{ .Values.persistence.bundle.fileProvider.path }}
            {{- end }}
        {{- end }}
      containers:
        - name: {{ include "nifi-registry.name" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "../scripts/custom-startup.sh" ]
          env:
            - name: NIFI_REGISTRY_WEB_HTTPS_HOST
              value: 0.0.0.0
            - name: NIFI_REGISTRY_WEB_HTTPS_PORT
              value: {{ .Values.ports.https | quote }}
            - name: NIFI_REGISTRY_SENSITIVE_PROPERTIES_KEY
              valueFrom:
                secretKeyRef:
                  {{- toYaml .Values.global.encryption.sensitivePropertiesKey.secretRef | nindent 18 }}
            {{- if .Values.database.external }}
            {{- with .Values.database.url }}
            - name: NIFI_REGISTRY_DB_URL
              value: {{ . | quote }}
            {{- end }}
            {{- with .Values.database.driver.class }}
            - name: NIFI_REGISTRY_DB_CLASS
              value: {{ . | quote}}
            {{- end }}
            - name: NIFI_REGISTRY_DB_DIR
              value: {{ $databaseDriverPath }}
            - name: NIFI_REGISTRY_DB_USER
              value: {{ .Values.database.userName }}
            - name: NIFI_REGISTRY_DB_PASS
              valueFrom:
                secretKeyRef:
                  {{ toYaml .Values.database.password.secretRef | nindent 18 }}
            - name: NIFI_REGISTRY_DB_MAX_CONNS
              value: {{ .Values.database.maxConnections | quote }}
            - name: NIFI_REGISTRY_DB_DEBUG_SQL
              value: {{ .Values.database.debug | quote }}
            {{- end }}
            {{- if eq .Values.persistence.flow.provider "file" }}
            - name: NIFI_REGISTRY_FLOW_PROVIDER
              value: {{ .Values.persistence.flow.provider | quote }}
            {{- if eq .Values.persistence.flow.provider "file" }}
            - name: NIFI_REGISTRY_FLOW_STORAGE_DIR
              value: {{ $flowStorageDir | quote }}
            {{- end }}
            {{- end }}
            - name: NIFI_REGISTRY_BUNDLE_PROVIDER
              value: {{ .Values.persistence.bundle.provider | quote }}
            - name: NIFI_REGISTRY_BUNDLE_STORAGE_DIR
              value: {{ $bundleStorageDir | quote }}
            {{- include "nifi.keystoreEnvironment" . | nindent 12 }}
            {{- include "nifi.ldapEnvironment" . | nindent 12 }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            {{- range $name, $number := .Values.ports }}
            - name: {{ $name }}
              containerPort: {{ $number }}
              protocol: TCP
            {{- end }}
          volumeMounts:
            - mountPath: {{ include "nifi.certPath" . }}/tls.crt
              name: certs
              subPath: tls.crt
              readOnly: true
            - mountPath: {{ include "nifi.certPath" . }}/tls.key
              name: certs
              subPath: tls.key
              readOnly: true
            - mountPath: {{ include "nifi.certPath" . }}/ca.crt
              name: certs
              subPath: ca.crt
              readOnly: true
            - mountPath: {{ include "nifi.tlsPath" . }}/keystore.p12
              name: certs
              subPath: keystore.p12
              readOnly: true
            - mountPath: {{ include "nifi.tlsPath" . }}/truststore.p12
              name: certs
              subPath: truststore.p12
              readOnly: true
            - mountPath: /opt/nifi-registry/scripts/custom-startup.sh
              name: config
              subPath: custom-startup.sh
              readOnly: true
            {{- if .Values.database.external }}
              {{- /* MySQL or Postgres database driver */}}
            - mountPath: {{ $databaseDriverPath }}/{{ .Values.database.driver.fileName }}
              name: dbdriver
              subPath: {{ .Values.database.driver.fileName }}
              readOnly: true
            {{- else }}
              {{- /* If using an internal database, mount a volume if one was specified */}}
            - mountPath: {{ $nifiRegistryHome }}/database
              name: data
              subPath: {{ .Values.persistence.database.path }}
            {{- end }}
            - mountPath: {{ $nifiRegistryHome }}/persistent_conf
              name: data
              subPath: {{ .Values.persistence.config.path }}
            {{- if eq .Values.persistence.flow.provider "file" }}
            - mountPath: {{ $flowStorageDir }}
              name: data
              subPath: {{ .Values.persistence.flow.fileProvider.path }}
            {{- end }}
            {{- if eq .Values.persistence.bundle.provider "file" }}
            - mountPath: {{ $bundleStorageDir }}
              name: data
              subPath: {{ .Values.persistence.bundle.fileProvider.path }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 14 }}
          startupProbe:
            httpGet:
              path: /nifi-registry
              port: https
              scheme: HTTPS
            {{- toYaml .Values.probeTimings.startup | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /nifi-registry
              port: https
              scheme: HTTPS
            {{- toYaml .Values.probeTimings.readiness | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /nifi-registry
              port: https
              scheme: HTTPS
            {{- toYaml .Values.probeTimings.liveness | nindent 12 }}
      volumes:
        - name: certs
          secret:
            secretName: {{ include "nifi-registry.fullname" . }}-tls
            defaultMode: 0400
        - name: config
          configMap:
            name: {{ include "nifi-registry.fullname" . }}
            defaultMode: 0500
        {{- with .Values.database.driver.volumeSpec }}
        - name: dbdriver-source
          {{- toYaml . | nindent 10 }}
        {{- end }}
        - name: dbdriver
          emptyDir: { }
        - name: data
          {{- if .Values.persistence.volumeSpec }}
          {{- toYaml .Values.persistence.volumeSpec | nindent 10 }}
          {{- else }}
          emptyDir: { }
          {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- if .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- else }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    {{- include "nifi-registry.selectorLabels" . | nindent 20 }}
                topologyKey: kubernetes.io/hostname
              weight: 100
        {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
